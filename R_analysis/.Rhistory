knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
# library(rcompanion)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
# library(rcompanion)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/robot-x-ar/data/questionnaire/")
task_df <- read_csv("vis_ranking.csv")
######################### get mean and sd (or se) #########################
task_df %>%
group_by(condition) %>%
get_summary_stats(ranking, type = "mean_sd")
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/robot-x-ar/data/questionnaire/")
rank_df <- read_csv("vis_ranking.csv")
######################### get mean and sd (or se) #########################
rank_df %>%
group_by(condition) %>%
get_summary_stats(ranking, type = "mean_sd")
bxp <- ggboxplot(rank_df, x = "condition", y = "ranking", add = "jitter")
bxp
# ggexport(bxp, filename = "tlx.png")
######################### check for outliers #########################
rank_df %>%
group_by(condition) %>%
identify_outliers(ranking)
######################### check normality #########################
rank_df %>%
group_by(condition) %>%
shapiro_test(ranking)
ggqqplot(rank_df, "ranking", facet.by = "condition")
######################### check for outliers #########################
rank_df %>%
group_by(trial) %>%
identify_outliers(ranking)
######################### check for outliers #########################
rank_df %>%
group_by(condition) %>%
identify_outliers(ranking)
######################### check normality #########################
rank_df %>%
group_by(condition) %>%
shapiro_test(ranking)
ggqqplot(rank_df, "ranking", facet.by = "condition")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = ccondition)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(data = rank_df, dv = ranking, within = ccondition)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(data = rank_df, dv = ranking, within = condition)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(data = rank_df, dv = ranking, within = condition)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/robot-x-ar/data/questionnaire/")
rank_df <- read_csv("vis_ranking.csv")
######################### get mean and sd (or se) #########################
rank_df %>%
group_by(condition) %>%
get_summary_stats(ranking, type = "mean_sd")
bxp <- ggboxplot(rank_df, x = "condition", y = "ranking", add = "jitter")
bxp
# ggexport(bxp, filename = "tlx.png")
######################### check for outliers #########################
rank_df %>%
group_by(condition) %>%
identify_outliers(ranking)
######################### check normality #########################
rank_df %>%
group_by(condition) %>%
shapiro_test(ranking)
ggqqplot(rank_df, "ranking", facet.by = "condition")
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
get_anova_table(res.aov)
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
group_by(condition) %>%
pairwise_t_test(
ranking ~ trial, paired = TRUE,
p.adjust.method = "holm"
)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
get_anova_table(res.aov)
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
pairwise_t_test(
ranking ~ condition, paired = TRUE,
p.adjust.method = "holm"
)
pwc
# ###### kruskal-wallis test ######
# res.kruskal <- rank_df %>% kruskal_test(ranking ~ condition)
# res.kruskal
#
# rank_df %>% kruskal_effsize(ranking ~ condition)
# ######################### Two-way mixed ANOVA test #########################
# res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(ranking ~ condition, data = rank_df)
# Summary of the analysis
summary(res.aov)
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
pairwise_t_test(
ranking ~ condition, paired = TRUE,
p.adjust.method = "holm"
)
pwc
# ###### kruskal-wallis test ######
# res.kruskal <- rank_df %>% kruskal_test(ranking ~ condition)
# res.kruskal
#
# rank_df %>% kruskal_effsize(ranking ~ condition)
# ######################### Two-way mixed ANOVA test #########################
# res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(ranking ~ condition, data = rank_df)
# Summary of the analysis
summary(res.aov)
TukeyHSD(res.aov)
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
pairwise_t_test(
ranking ~ condition, paired = TRUE,
p.adjust.method = "holm"
)
pwc
# ###### kruskal-wallis test ######
# res.kruskal <- rank_df %>% kruskal_test(ranking ~ condition)
# res.kruskal
#
# rank_df %>% kruskal_effsize(ranking ~ condition)
# ######################### Two-way mixed ANOVA test #########################
# res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(ranking ~ condition, data = rank_df)
# Summary of the analysis
summary(res.aov)
TukeyHSD(res.aov)
pairwise.t.test(rank_df$ranking, rank_df$condition,
p.adjust.method = "BH")
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
pairwise_t_test(
ranking ~ condition, paired = TRUE,
p.adjust.method = "holm"
)
pwc
# ###### kruskal-wallis test ######
# res.kruskal <- rank_df %>% kruskal_test(ranking ~ condition)
# res.kruskal
#
# rank_df %>% kruskal_effsize(ranking ~ condition)
pairwise.t.test(rank_df$ranking, rank_df$condition,
p.adjust.method = "holm")
# ######################### Two-way mixed ANOVA test #########################
# res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(ranking ~ condition, data = rank_df)
# Summary of the analysis
summary(res.aov)
TukeyHSD(res.aov)
pairwise.t.test(rank_df$ranking, rank_df$condition,
p.adjust.method = "holm")
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
pairwise_t_test(
ranking ~ condition, paired = TRUE,
p.adjust.method = "holm"
)
pwc
# ###### kruskal-wallis test ######
# res.kruskal <- rank_df %>% kruskal_test(ranking ~ condition)
# res.kruskal
#
# rank_df %>% kruskal_effsize(ranking ~ condition)
# ######################### Two-way mixed ANOVA test #########################
# res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(ranking ~ condition, data = rank_df)
# Summary of the analysis
summary(res.aov)
TukeyHSD(res.aov)
res <- pairwise.t.test(rank_df$ranking, rank_df$condition,
p.adjust.method = "holm")
res
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
pairwise_t_test(
ranking ~ condition, paired = TRUE,
p.adjust.method = "holm"
)
pwc
# ###### kruskal-wallis test ######
# res.kruskal <- rank_df %>% kruskal_test(ranking ~ condition)
# res.kruskal
#
# rank_df %>% kruskal_effsize(ranking ~ condition)
# ######################### Two-way mixed ANOVA test #########################
# res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(ranking ~ condition, data = rank_df)
# Summary of the analysis
summary(res.aov)
# TukeyHSD(res.aov)
res <- pairwise.t.test(rank_df$ranking, rank_df$condition,
p.adjust.method = "holm")
res
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
pairwise_t_test(
ranking ~ condition, paired = TRUE,
p.adjust.method = "holm"
)
pwc
# ###### kruskal-wallis test ######
# res.kruskal <- rank_df %>% kruskal_test(ranking ~ condition)
# res.kruskal
#
# rank_df %>% kruskal_effsize(ranking ~ condition)
######################### Two-way mixed ANOVA test #########################
res.aov <- anova_test(data = rank_df, dv = ranking, wid = pid, within = condition)
get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(ranking ~ condition, data = rank_df)
# Summary of the analysis
summary(res.aov)
# TukeyHSD(res.aov)
res <- pairwise.t.test(rank_df$ranking, rank_df$condition,
p.adjust.method = "holm")
res
######################### SIG: Pairwise comparisons between trials for each condition #########################
pwc <- rank_df %>%
pairwise_t_test(
ranking ~ condition, paired = TRUE,
p.adjust.method = "holm"
)
pwc
# ###### kruskal-wallis test ######
# res.kruskal <- rank_df %>% kruskal_test(ranking ~ condition)
# res.kruskal
#
# rank_df %>% kruskal_effsize(ranking ~ condition)
